Colt Matrix benchmark running on

java.vm.vendor  IBM Corporation    
java.vm.version 1.3.0              
java.vm.name    Classic VM         
os.name         Linux              
os.version      2.2.12-20smp       
os.arch         x86                
java.version    1.3.0              
java.vendor     IBM Corporation    
java.vendor.url http://www.ibm.com/

Colt Version is Version 1.0.1.51 (Mon May 15 20:23:08 CEST 2000)
Please report problems to wolfgang.hoschek@cern.ch or http://nicewww.cern.ch/~hoschek/colt/index.htm



Executing command = [elementwiseMult, dense, 1, 2, 0.999, 5, 10, 25, 50, 100, 250, 500, 1000] ...

@x.x.x.x.x.x.x.x.*
Performance of A.assign(F.mult(0.5)) via Blas [Mflops/sec]
type=dense
        | size
        | 5      10     25     50    100    250  500    1000  
--------------------------------------------------------------
d 0.999 | 31.272 57.278 92.914 43.65 47.647 27.2 22.452 23.232
Run took a total of Time=38.05 secs. End of run.


Executing command = [elementwiseMultB, dense, 1, 2, 0.999, 5, 10, 25, 50, 100, 250, 500, 1000] ...

@x.x.x.x.x.x.x.x.*
Performance of A.assign(B,F.mult) via Blas [Mflops/sec]
type=dense
        | size
        | 5      10     25     50     100    250    500    1000  
-----------------------------------------------------------------
d 0.999 | 44.274 55.451 60.475 35.507 26.752 14.646 14.925 14.599
Run took a total of Time=34.514 secs. End of run.

Command file name used: /afs/cern.ch/user/h/hoschek/coltb4/cmd5
To reproduce and compare results, here it's contents:
// with 1 and with 2 CPUs
elementwiseMult dense 1 2.0 0.999 5 10 25 50 100 250 500 1000

elementwiseMultB dense 1 2.0 0.999 5 10 25 50 100 250 500 1000

Program execution took a total of 1.2129 minutes.
Good bye.
